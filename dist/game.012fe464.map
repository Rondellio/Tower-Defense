{"version":3,"sources":["js/CST.js","js/scenes/MenuScene.js","js/scenes/GameScene.js","js/scenes/LoadScene.js","js/game.js"],"names":["CST","SCENES","LOAD","MENU","GAME","MenuScene","key","data","console","log","add","image","setOrigin","setDepth","newGame","game","renderer","width","height","setInteractive","on","scene","start","Phaser","Scene","path","TOWER_GROUP","ENEMY_GROUP","mainGame","attacks","ENEMY_SPEED","ENEMY_HP","ENEMY_SPAWN_RATE","ATTACK_DAMAGE","TOWER_FIRE_RATE","peasantStats","towerId","towerName","upgrade","str","atkRange","atkType","atkRate","hitfly","soldierStats","archerStats","apprenticeStats","knightStats","duelistStats","riflemanStats","rangerStats","wizardStats","sorceressStats","commanderStats","paladinStats","swordmasterStats","cutpurseStats","cannoneerStats","sharpshooterStats","beastmasterStats","assassinStats","firemageStats","icemageStats","lightningmageStats","warlockStats","priestessStats","map","getEnemy","x","y","distance","enemyUnits","getChildren","i","length","active","Math","Distance","Between","drawLines","graphics","lineStyle","moveTo","lineTo","j","strokePath","damageEnemy","enemy","attack","setActive","setVisible","receiveDamage","addAttack","angle","get","fire","HealthBar","health","bar","GameObjects","Graphics","value","maxHealth","p","draw","existing","amount","clear","fillStyle","fillRect","d","floor","destroy","Enemy","Sprite","call","anims","play","follower","t","vec","Vector2","hp","turned","healthbar","getPoint","setPosition","damage","decrease","time","delta","Tower","stats","nextTic","hitFly","text","font","fill","pointer","remove","newTower","removeTower","placeTower","Angle","Image","Peasant","Soldier","Attack","incX","incY","lifespan","speed","GetSpeed","dx","cos","dy","sin","GameScene","create","frames","generateFrameNames","prefix","end","frameRate","repeat","group","classType","runChildUpdate","physics","nextEnemy","overlap","input","mouse","disableContextMenu","leftButtonDown","tower","upgradeTower","setText","rightButtonDown","startOnPath","LoadScene","load","atlas","spritesheet","frameWidth","frameHeight","audio","config","type","AUTO","parent","default","render","pixelArt","Game"],"mappings":"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","file":"game.012fe464.map","sourceRoot":"..","sourcesContent":["export const CST = {\r\n    SCENES: {\r\n        LOAD: \"LOAD\",\r\n        MENU: \"MENU\",\r\n        GAME: \"GAME\"\r\n    }\r\n}\r\n","import { CST} from \"../CST\";\r\n\r\nexport class MenuScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.MENU\r\n        })\r\n    }\r\n    init(data){\r\n        console.log(data);\r\n    }\r\n   /* preload(){\r\n        this.load.image('menuscreen', 'assets/bg.png', { frameWidth: 640, frameHeight: 512 });\r\n        this.load.image('newgame', 'assets/new.png');\r\n    }*/\r\n    create(){\r\n        //Creating menu screen background layers\r\n        this.add.image(0, 0, 'menuscreen').setOrigin(0).setDepth(0);\r\n        let newGame = this.add.image(this.game.renderer.width / 2, this.game.renderer.height / 2, 'newgame').setDepth(1);\r\n        console.log(\"In Menu Scene\");\r\n\r\n        newGame.setInteractive();\r\n        newGame.on(\"pointerdown\", ()=>{\r\n            this.scene.start(CST.SCENES.GAME, \"Starting New Game\");\r\n        })\r\n    }\r\n}\r\n","import {CST} from \"../CST\";\r\n//import {Enemy} from \"../Enemy\";\r\n//import {GlobalVariables} from \"../GlobalVariables\";\r\n\r\nvar path;\r\nvar TOWER_GROUP = [];\r\nvar ENEMY_GROUP = [];\r\nvar mainGame;\r\nvar attacks;\r\n\r\nvar ENEMY_SPEED = 1/10000;\r\n//var ENEMY_SPEED = 1/Math.floor((Math.random() * 10000) + 10000);\r\nvar ENEMY_HP = 1000;\r\nvar ENEMY_SPAWN_RATE = 2000;\r\n//var ENEMY_SPAWN_RATE = Math.floor((Math.random() * 1000) + 1000);\r\nvar ATTACK_DAMAGE = 50;\r\nvar TOWER_FIRE_RATE = 300;\r\n\r\n//stats for each tower type loaded from file rather than defined here, but for now do this\r\nvar peasantStats = \t\t {towerId:0,  towerName:\"Peasant\", \t\t upgrade:true,  str:5,  atkRange:\"short\",     atkType:\"physical\", atkRate:\"slow\", \t  hitfly:false};\r\nvar soldierStats = \t\t {towerId:1,  towerName:\"Soldier\", \t\t upgrade:true,  str:10, atkRange:\"short\",     atkType:\"physical\", atkRate:\"medium\",   hitfly:false};\r\nvar archerStats = \t\t {towerId:2,  towerName:\"Archer\", \t\t upgrade:true,  str:8,  atkRange:\"medium\",    atkType:\"physical\", atkRate:\"slow\", \t  hitfly:true};\r\nvar apprenticeStats = \t {towerId:3,  towerName:\"Apprentice\", \t upgrade:true,  str:7,  atkRange:\"medium\",    atkType:\"magical\",  atkRate:\"medium\",   hitfly:false};\r\nvar knightStats = \t\t {towerId:4,  towerName:\"Knight\", \t\t upgrade:true,  str:15, atkRange:\"short\",     atkType:\"physical\", atkRate:\"medium\",   hitfly:false};\r\nvar duelistStats = \t\t {towerId:5,  towerName:\"Duelist\", \t\t upgrade:true,  str:12, atkRange:\"short\",     atkType:\"physical\", atkRate:\"fast\", \t  hitfly:false};\r\nvar riflemanStats =\t \t {towerId:6,  towerName:\"Rifleman\", \t upgrade:true,  str:20, atkRange:\"medium\",    atkType:\"physical\", atkRate:\"slow\", \t  hitfly:true};\r\nvar rangerStats = \t\t {towerId:7,  towerName:\"Ranger\", \t\t upgrade:true,  str:14, atkRange:\"medium\",    atkType:\"physical\", atkRate:\"medium\",   hitfly:true};\r\nvar wizardStats = \t\t {towerId:8,  towerName:\"Wizard\", \t\t upgrade:true,  str:10, atkRange:\"medium\", \t  atkType:\"magical\",  atkRate:\"medium\",   hitfly:true};\r\nvar sorceressStats = \t {towerId:9,  towerName:\"Sorceress\", \t upgrade:true,  str:13, atkRange:\"medium\", \t  atkType:\"magical\",  atkRate:\"slow\", \t  hitfly:true};\r\nvar commanderStats = \t {towerId:10, towerName:\"Commander\", \t upgrade:false, str:25, atkRange:\"short\", \t  atkType:\"physical\", atkRate:\"slow\", \t  hitfly:false};\r\nvar paladinStats = \t\t {towerId:11, towerName:\"Paladin\", \t\t upgrade:false, str:17, atkRange:\"short\", \t  atkType:\"physical\", atkRate:\"medium\",   hitfly:true};\r\nvar swordmasterStats = \t {towerId:12, towerName:\"Swordmaster\", \t upgrade:false, str:14, atkRange:\"short\", \t  atkType:\"physical\", atkRate:\"fast\", \t  hitfly:false};\r\nvar cutpurseStats = \t {towerId:13, towerName:\"Cutpurse\", \t upgrade:false, str:6,  atkRange:\"veryshort\", atkType:\"physical\", atkRate:\"veryfast\", hitfly:false};\r\nvar cannoneerStats = \t {towerId:14, towerName:\"Cannoneer\", \t upgrade:false, str:30, atkRange:\"long\", \t  atkType:\"physical\", atkRate:\"veryslow\", hitfly:false};\r\nvar sharpshooterStats =  {towerId:15, towerName:\"Sharpshooter\",  upgrade:false, str:35, atkRange:\"verylong\",  atkType:\"physical\", atkRate:\"slow\", \t  hitfly:true};\r\nvar beastmasterStats =   {towerId:16, towerName:\"Beastmaster\", \t upgrade:false, str:20, atkRange:\"long\",      atkType:\"physical\", atkRate:\"medium\",   hitfly:true};\r\nvar assassinStats = \t {towerId:17, towerName:\"Assassin\", \t upgrade:false, str:18, atkRange:\"long\",      atkType:\"physical\", atkRate:\"fast\", \t  hitfly:true};\r\nvar firemageStats = \t {towerId:18, towerName:\"FireMage\", \t upgrade:false, str:20, atkRange:\"medium\",    atkType:\"magical\",  atkRate:\"fast\", \t  hitfly:true};\r\nvar icemageStats = \t\t {towerId:19, towerName:\"IceMage\", \t\t upgrade:false, str:10, atkRange:\"long\",      atkType:\"magical\",  atkRate:\"medium\",   hitfly:true};\r\nvar lightningmageStats = {towerId:20, towerName:\"LightningMage\", upgrade:false, str:22, atkRange:\"short\",     atkType:\"magical\",  atkRate:\"medium\",   hitfly:true};\r\nvar warlockStats = \t\t {towerId:21, towerName:\"Warlock\", \t\t upgrade:false, str:15, atkRange:\"long\",      atkType:\"magical\",  atkRate:\"slow\", \t  hitfly:true};\r\nvar priestessStats =     {towerId:22, towerName:\"Priestess\", \t upgrade:false, str:13, atkRange:\"medium\",    atkType:\"magical\",  atkRate:\"medium\",   hitfly:true};\r\n\r\n//map for tower placement, 0=can place, -1=cannot place, 1=can place with turrent already occupying space\r\nvar map =  [[ 0,-1, 0,-1,-1,-1,-1,-1,-1,-1],\r\n            [ 0,-1, 0, 0, 0, 0, 0, 0, 0,-1],\r\n            [ 0,-1,-1,-1,-1,-1,-1,-1, 0,-1],\r\n            [ 0, 0, 0, 0, 0, 0, 0,-1, 0,-1],\r\n            [-1,-1,-1,-1,-1,-1, 0,-1, 0,-1],\r\n            [-1,-1,-1,-1,-1,-1, 0,-1, 0,-1],\r\n            [-1,-1,-1,-1,-1,-1, 0,-1, 0,-1],\r\n            [-1,-1,-1,-1,-1,-1, 0,-1, 0,-1]];\r\n\r\n//------------------------------------------FUNCTIONS---------------------------------------------------\t\t\t\r\nfunction getEnemy(x, y, distance) {\r\n    var enemyUnits = ENEMY_GROUP.getChildren();\r\n    for(var i = 0; i < enemyUnits.length; i++) {       \r\n        if(enemyUnits[i].active && Phaser.Math.Distance.Between(x, y, enemyUnits[i].x, enemyUnits[i].y) < distance)\r\n            return enemyUnits[i];\r\n    }\r\n    return false;\r\n} \r\n\r\nfunction drawLines(graphics) {\r\n    graphics.lineStyle(1, 0x0000ff, 0.8);\r\n    for(var i = 0; i < 8; i++) {\r\n        graphics.moveTo(0, i * 64);\r\n        graphics.lineTo(640, i * 64);\r\n    }\r\n    for(var j = 0; j < 10; j++) {\r\n        graphics.moveTo(j * 64, 0);\r\n        graphics.lineTo(j * 64, 512);\r\n    }\r\n    graphics.strokePath();\r\n}\t\r\n\r\nfunction damageEnemy(enemy, attack) {  \r\n    // only if both enemy and attack are alive\r\n    if (enemy.active === true && attack.active === true) {\r\n        // we remove the attack right away\r\n        attack.setActive(false);\r\n        attack.setVisible(false);    \r\n        \r\n        // decrease the enemy hp with ATTACK_DAMAGE\r\n        enemy.receiveDamage(ATTACK_DAMAGE);\r\n        //damage.play();\r\n    }\r\n}\r\n\r\nfunction addAttack(x, y, angle) {\r\n    var attack = attacks.get();\r\n    if (attack)\r\n    {\r\n        attack.fire(x, y, angle);\r\n    }\r\n}\r\n\r\n//---------------------------------------------------------CLASSES--------------------------------------------\r\nclass HealthBar {\r\n\r\n    constructor(scene, x, y, health) {\r\n        this.bar = new Phaser.GameObjects.Graphics(scene);\r\n\r\n        this.x = x;\r\n        this.y = y;\r\n        this.value = health;\r\n        this.maxHealth = health;\r\n        this.p = .076;\r\n\r\n        this.draw();\r\n\r\n        scene.add.existing(this.bar);\r\n    }\r\n\r\n    setPosition(x, y) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.draw();\r\n    }\r\n\r\n    decrease(amount) {\r\n        this.value -= amount;\r\n\r\n        if (this.value < 0) {\r\n            this.value = 0;\r\n        }\r\n        \r\n        this.draw();\r\n\r\n        return (this.value === 0);\r\n    }\r\n\r\n    draw() {\r\n        this.bar.clear();\r\n\r\n        //  BG\r\n        this.bar.fillStyle(0x000000);\r\n        this.bar.fillRect(this.x, this.y, 80, 16);\r\n\r\n        //  Health\r\n\r\n        this.bar.fillStyle(0xffffff);\r\n        this.bar.fillRect(this.x + 2, this.y + 2, 76, 12);\r\n        \r\n        if (this.value < 0.3 * this.maxHealth)\r\n            this.bar.fillStyle(0xff0000);\r\n        \r\n        else if (this.value < 0.6 * this.maxHealth) {\r\n            this.bar.fillStyle(0xffff00);\r\n        }\r\n        else {\r\n            this.bar.fillStyle(0x00ff00);\r\n        }\r\n\r\n        var d = Math.floor(this.p * this.value);\r\n\r\n        this.bar.fillRect(this.x + 2, this.y + 2, d, 12);\r\n    }\r\n\r\n    destroy() {\r\n        this.bar.destroy();\r\n    }\r\n\r\n};\r\n\r\nclass Enemy extends Phaser.GameObjects.Sprite {\r\n\r\n    constructor (scene)\r\n    {\r\n        super(scene);\r\n        //dknight.animations.add('walk_down', 1, 4);\r\n        //this.anims.create({ key: 'down', frames: this.anims.generateFrameNames('deathknight', { prefix: 'walk_down_', start: 1, end: 4 }), frameRate: 5, repeat: -1 })\r\n        \r\n        var enemy = Phaser.GameObjects.Sprite.call(this, scene, 0, 0, 'deathknight');\r\n        \r\n        this.anims.play('dkdown');\r\n        //walk.play();\r\n        this.follower = { t: 0, vec: new Phaser.Math.Vector2() };\r\n        this.hp = 0;\r\n        this.turned = 0;\r\n\t\t\r\n        /*this.text = mainGame.add.text(0, 0, \"HP: \"+ ENEMY_HP, {font: \"16px Arial\", fill: \"#ffffff\"});\r\n        this.text.setPadding(0, 0, 0, 60);\r\n        this.text.setOrigin(0.5);*/\r\n        this.healthbar = new HealthBar(scene, 0, 0, ENEMY_HP);\r\n\t\t\r\n    }\r\n\r\n    startOnPath ()\r\n    {\r\n        this.follower.t = 0;\r\n        this.hp = ENEMY_HP;\r\n\t\t\r\n        path.getPoint(this.follower.t, this.follower.vec);\r\n\t\t\r\n        this.setPosition(this.follower.vec.x, this.follower.vec.y);     \r\n        //this.text.setPosition(this.follower.vec.x, this.follower.vec.y);\r\n        this.healthbar.setPosition(this.follower.vec.x - this.width, this.follower.vec.y - this.height);\r\n    }\r\n\t\r\n    receiveDamage(damage) {\r\n        this.hp -= damage;           \r\n        //this.text.setText(\"HP: \" + this.hp);\r\n        this.healthbar.decrease(damage);\r\n        // if hp drops below 0 we deactivate this enemy\r\n        if (this.hp <= 0) {\r\n            this.setActive(false);\r\n            this.setVisible(false);\r\n            //this.text.setActive(false);\r\n            //this.text.setVisible(false);\r\n            this.healthbar.destroy();\r\n            //dkdeath.play();\r\n            //Need to set this to stop when all enemies are dead\r\n            //walk.stop();\r\n            this.destroy();\r\n        }\r\n    }\r\n\t\r\n    update (time, delta)\r\n    {\r\n        //ENEMY_SPEED = 1/Math.floor((Math.random() * (10000 - 5000)) + 5000);\r\n        this.follower.t += ENEMY_SPEED * delta;\r\n\t\t\r\n        path.getPoint(this.follower.t, this.follower.vec);\r\n\t\t\r\n        this.setPosition(this.follower.vec.x, this.follower.vec.y);\r\n        //this.text.setPosition(this.follower.vec.x, this.follower.vec.y);\r\n        this.healthbar.setPosition(this.follower.vec.x - this.width, this.follower.vec.y - this.height);\r\n        if (this.follower.vec.y == 164 && this.turned == 0) {\r\n            this.anims.play('dkright');\r\n            this.turned = 1;\r\n        }\r\n        else if (this.follower.vec.y != 164 && this.turned == 1)\r\n        {\r\n            this.anims.play('dkdown');\r\n            this.turned = 2;\r\n        }\r\n\r\n        if (this.follower.t >= 1)\r\n        {\r\n            this.setActive(false);\r\n            this.setVisible(false);\r\n            //this.text.setActive(false);\r\n            //this.text.setVisible(false);\r\n            this.healthbar.destroy();\r\n            this.destroy();\r\n        }\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n//towers class\r\nclass Tower extends Phaser.GameObjects.Image {\r\n\r\n    constructor (scene, stats)\r\n    {\r\n        super(scene);\r\n        //Phaser.GameObjects.Image.call(this, scene, 0, 0, 'goldenarmor', 'sprite25');\r\n        this.nextTic = 0;\r\n        this.towerId =  stats.towerId; //each tower has unique id\r\n        this.towerName = stats.towerName;\r\n        this.upgrade = stats.upgrade; //true = can upgrade, false = can't upgrade\r\n        this.str = stats.str; //value tha determines attack strength\r\n        this.atkRange = stats.atkRange;\r\n        this.atkType = stats.atkType;\r\n        this.atkRate = stats.atkRate; \r\n        this.hitFly = stats.hitFly; //true = can hit flying enemeies, false = cannot hit flying enemies\r\n        //this.aoeRange = aoeRange; //area of effect range\r\n        //this.spc = spc; //has special attack, each value represents special type, 0 = none, 1 = chance to stun, etc.\r\n        this.text = mainGame.add.text(0, 0, this.towerName, {font: \"16px Arial\", fill: \"#ffffff\"});\r\n    }\r\n\t\r\n    placeTower(pointer) {\r\n        var i = Math.floor(pointer.y/64);\r\n        var j = Math.floor(pointer.x/64);\r\n        if(map[i][j] === 0) {\r\n            //console.log(tower);\r\n            if (this)\r\n            {\r\n                this.text.y = (i+.50) * 64 + 64/2;\r\n                this.text.x = j * 64 + 64/2;\r\n                this.text.setOrigin(0.5);\r\n                //mainGame.add.container([this.text, this]);\r\n                this.setActive(true);\r\n                this.setVisible(true);\r\n                this.y = i * 64 + 64/2;\r\n                this.x = j * 64 + 64/2;\r\n                //map[i][j] = 1;\r\n                map[i][j] = this;\r\n            }   \r\n            //console.log(TOWER_GROUP.getTotalUsed());\r\n            //console.log(TOWER_GROUP.getLength());\r\n        }\r\n        else\r\n            TOWER_GROUP[this.towerId].remove(this, true, true);\t\t//tower is created before it's placed so removed if the place clicked on is  not avaialble\r\n    }\r\n\r\n    removeTower(pointer) {\r\n        var i = Math.floor(pointer.y/64);\r\n        var j = Math.floor(pointer.x/64);\r\n        if(map[i][j] !== 0) {\r\n            this.setActive(false);\r\n            this.setVisible(false);\r\n            this.text.setActive(false);\r\n            this.text.setVisible(false);\r\n            map[i][j] = 0;\t\t\t\t\t\t\t\t//remove from map\r\n            TOWER_GROUP[this.towerId].remove(this, true, true);\t\t\t//removes from group, if want to keep it as inactive then remove this line\r\n        }\r\n\t\t\t\r\n    }\r\n\t\r\n    upgradeTower(pointer, newTower) {\r\n        var i = Math.floor(pointer.y/64);\r\n        var j = Math.floor(pointer.x/64);\r\n        this.removeTower(pointer);\r\n        newTower.placeTower(pointer);\r\n        //console.log(TOWER_GROUP.getTotalUsed());\r\n        //console.log(TOWER_GROUP.getLength());\r\n\t\r\n    }\r\n\t\r\n    fire() {\r\n        var enemy = getEnemy(this.x, this.y, 200);\r\n        if(enemy) {\r\n            var angle = Phaser.Math.Angle.Between(this.x, this.y, enemy.x, enemy.y);\r\n            addAttack(this.x, this.y, angle);\r\n            //this.angle = (angle + Math.PI/2) * Phaser.Math.RAD_TO_DEG;    //uncomment to make towers rotate to face enemy\r\n        }\r\n    }\r\n\t\r\n    update(time, delta, pointer)\r\n    {\r\n        if(time > this.nextTic) {\r\n            this.fire();\r\n            this.nextTic = time + TOWER_FIRE_RATE;\r\n        }\r\n    }\r\n    sayName()\r\n    {\r\n        console.log(this.towerName);\r\n    }\r\n\r\n};\r\n\r\nclass Peasant extends Tower {\r\n    constructor(scene, stats) {\r\n        // Note: In derived classes, super() must be called before you\r\n        // can use 'this'. Leaving this out will cause a reference error.\r\n        super(scene, stats);\r\n        Phaser.GameObjects.Image.call(this, scene, 0, 0, 'peasant', 'sprite35');\r\n    }\r\n    pFn()\r\n    {\r\n        console.log(this.towerName);\r\n    }\r\n\r\n};\r\n\r\nclass Soldier extends Tower {\r\n    constructor(scene, stats) {\r\n        super(scene, stats);\r\n        Phaser.GameObjects.Image.call(this, scene, 0, 0, 'goldenarmor', 'sprite25');\r\n\t\t\r\n    }\r\n    sFn()\r\n    {\r\n        console.log(this.towerName);\r\n    }\r\n\r\n};\r\n\r\n//the yellow thing the towers shoots at enemy, can be any form of projectile\r\nclass Attack extends Phaser.GameObjects.Image {\r\n    constructor(scene)\r\n    {\r\n        super(scene);\r\n        Phaser.GameObjects.Image.call(this, scene, 0, 0, 'attack');\r\n\r\n        this.incX = 0;\r\n        this.incY = 0;\r\n        this.lifespan = 0;\r\n\r\n        this.speed = Phaser.Math.GetSpeed(600, 1);\r\n    }\r\n\r\n    fire(x, y, angle)\r\n    {\r\n        this.setActive(true);\r\n        this.setVisible(true);\r\n        //  Attacks fire from the middle of the screen to the given x/y\r\n        this.setPosition(x, y);\r\n\t\t\r\n        //  we don't need to rotate the attacks as they are round\r\n        //    this.setRotation(angle);\r\n\r\n        this.dx = Math.cos(angle);\r\n        this.dy = Math.sin(angle);\r\n\r\n        this.lifespan = 1000;\r\n    }\r\n\r\n    update (time, delta)\r\n    {\r\n        this.lifespan -= delta;\r\n\r\n        this.x += this.dx * (this.speed * delta);\r\n        this.y += this.dy * (this.speed * delta);\r\n\r\n        if (this.lifespan <= 0)\r\n        {\r\n            this.setActive(false);\r\n            this.setVisible(false);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\nexport class GameScene extends Phaser.Scene {\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.GAME\r\n        })\r\n    }\r\n\r\n    \r\n    //Preload function loads assets before game starts\r\n \r\n    init(data){\r\n        console.log(data);\r\n    }\r\n\r\n    //create function initializes and adds assets to game\r\n    create() {\r\n        //path to which enemy follows\r\n        var graphics = this.add.graphics();    \r\n        drawLines(graphics);\r\n        path = this.add.path(96, -32);\r\n        path.lineTo(96, 164);\r\n        path.lineTo(480, 164);\r\n        path.lineTo(480, 544);\r\n\t\r\n        graphics.lineStyle(0, 0xffffff, 1);\r\n        path.draw(graphics);\r\n\r\n        this.add.image(320, 256, 'map');\r\n        mainGame = this;\r\n        \r\n        this.anims.create({\r\n            key: 'dkdown',\r\n            frames: this.anims.generateFrameNames('deathknight', { prefix: 'walk_down_', start: 1, end: 4 }),\r\n            frameRate: 3,\r\n            repeat: -1\r\n        });\r\n        this.anims.create({\r\n            key: 'dkright',\r\n            frames: this.anims.generateFrameNames('deathknight', { prefix: 'walk_right_', start: 1, end: 4 }),\r\n            frameRate: 5,\r\n            repeat: -1\r\n        });\r\n\r\n        /*\r\n            var dkdeath = this.sound.add('dkDeath');\r\n            var damage = this.sound.add('hit');\r\n            damage.volume = 0.3;\r\n            var walk = this.sound.add('walk');\r\n            walk.volume = 0.3;\r\n            walk.loop = true;\r\n            var background = this.sound.add('background');\r\n            background.volume = 0.2;\r\n            background.loop = true;\r\n            background.play(); */\r\n\t\r\n        //creates a group for a tower type, that way we can use TOWER_GROUP.get(peasantStats) to instantiate new towers easily\r\n        //same goes for enemies and attacks and for any new classes created\r\n        TOWER_GROUP[peasantStats.towerId] = this.add.group({ classType: Peasant, runChildUpdate: true });\r\n        TOWER_GROUP[soldierStats.towerId] = this.add.group({ classType: Soldier, runChildUpdate: true });\r\n\t\r\n        ENEMY_GROUP = this.physics.add.group({ classType: Enemy, runChildUpdate: true }); //key: 'walk_down_', frame: [1, 2, 3, 4], repeat: 5, active: true });\r\n   \r\n\t\r\n        //ENEMY_GROUP.callAll('play', null, 'down',);\r\n\r\n        attacks = this.physics.add.group({ classType: Attack, runChildUpdate: true });\r\n    \r\n        this.nextEnemy = 0;\r\n    \r\n        this.physics.add.overlap(ENEMY_GROUP, attacks, damageEnemy);\r\n    \r\n        this.input.mouse.disableContextMenu();\r\n\t\r\n        this.input.on('pointerdown', function (pointer) {\r\n            if (pointer.leftButtonDown())\r\n            {\r\n                var i = Math.floor(pointer.y/64);\r\n                var j = Math.floor(pointer.x/64);\r\n                if(map[i][j] == 0)\r\n                {\r\n                    var tower = TOWER_GROUP[peasantStats.towerId].get(peasantStats);\r\n                    tower.placeTower(pointer);\r\n                }\r\n                else if(typeof map[i][j] === \"object\")\r\n                {\r\n                    var tower = map[i][j];\r\n                    //var newTG = mainGame.add.group({ classType: Soldier, runChildUpdate: true });\r\n                    var newTower = TOWER_GROUP[soldierStats.towerId].get(soldierStats);\r\n                    tower.upgradeTower(pointer, newTower);\r\n                    tower.setText = newTower.towerName;\r\n                }\r\n            }\r\n            else if (pointer.rightButtonDown())\r\n            {\r\n                var i = Math.floor(pointer.y/64);\r\n                var j = Math.floor(pointer.x/64);\r\n                var tower = map[i][j];\r\n                if(typeof tower === \"object\")\r\n                {\r\n                    tower.removeTower(pointer);\r\n                }\r\n\t\t\t\r\n                /* TOWER_GROUP.children.iterate(function (tower) {\r\n                    var i = Math.floor(pointer.y/64);\r\n                    var j = Math.floor(pointer.x/64);\r\n                    var y = i * 64 + 64/2;\r\n                    var x = j * 64 + 64/2;\r\n                    if (tower && tower.x == x && tower.y == y)\r\n                    {\r\n                        tower.removeTower(pointer);\r\n                        //tower.upgradeTower(pointer);\r\n                    }\r\n                }); */\r\n            }\r\n        });\r\n\t\r\n        /* \tthis.arrow = this.input.keyboard.createCursorKeys();\r\n            if (this.arrow.down.isDown) {\r\n               this.scene.pause();\r\n            }  */\r\n    }\r\n\r\n    //update function constantly refreshes so to progress game\r\n    update(time, delta, path) {  \r\n\r\n        if (time > this.nextEnemy)\r\n        {\r\n            var enemy = ENEMY_GROUP.get(path);\r\n            if (enemy)\r\n            {\r\n                enemy.setActive(true);\r\n                enemy.setVisible(true);\r\n                enemy.startOnPath();\r\n                //ENEMY_SPEED = 1/Math.floor((Math.random() * (2000 - 500)) + 500);\r\n                this.nextEnemy = time + ENEMY_SPAWN_RATE;\r\n            }       \r\n        }\r\n\t\r\n    }\r\n}\r\n","import { CST} from \"../CST\";\r\n\r\nexport class LoadScene extends Phaser.Scene{\r\n    constructor(){\r\n        super({\r\n            key: CST.SCENES.LOAD\r\n        })\r\n    }\r\n\r\n    preload(){\r\n        this.load.atlas('deathknight', './assets/deathknight.png', 'assets/deathknight.json');\r\n        this.load.atlas('goldenarmor', './assets/goldenarmor.png', 'assets/goldenarmor.json');\r\n        this.load.atlas('peasant', './assets/peasant.png', 'assets/peasant.json');\r\n        this.load.spritesheet('bard', './assets/bard.png', { frameWidth: 52, frameHeight: 75});\r\n        this.load.image('attack', './assets/coin.png');\r\n        this.load.image('map', './assets/castle-gates.png', { frameWidth: 640, frameHeight: 512 });\r\n        this.load.audio('dkDeath', './assets/Sounds/Death Screams/Human/sfx_deathscream_human5.wav');\r\n        this.load.audio('hit', './assets/Sounds/General Sounds/Simple Damage Sounds/sfx_damage_hit2.wav');\r\n        this.load.audio('walk', './assets/Sounds/Movement/Footsteps/sfx_movement_footstepsloop4_slow.wav');\r\n        this.load.audio('background', './assets/Sounds/random silly chip song.ogg');\r\n\r\n        this.load.image('menuscreen', './assets/bg.png', { frameWidth: 640, frameHeight: 512 });\r\n        this.load.image('newgame', './assets/new.png');\r\n    }\r\n    create(){\r\n        //Creating menu screen background layers\r\n        this.scene.start(CST.SCENES.MENU, \"Loading complete\");\r\n        }\r\n}","import {MenuScene} from \"./scenes/MenuScene\";\r\nimport {GameScene} from \"./scenes/GameScene\";\r\nimport {LoadScene} from \"./scenes/LoadScene\";\r\n\r\n//-------------------------------------------------------SETUP-----------------------------------------------------\r\n//master config for game\r\n\r\nvar config = {\r\n    type: Phaser.AUTO,\r\n    parent: 'content',\r\n    width: 640,\r\n    height: 512,\r\n    physics: {\r\n        default: 'arcade'\r\n    },\r\n    render:{\r\n        pixelArt: true\r\n    },\r\n    scene: [\r\n        LoadScene,\r\n        MenuScene,\r\n        GameScene]\r\n    \r\n};\r\n\r\n//begin game\r\nvar game = new Phaser.Game(config);\r\n\r\n\r\n//----------------------------------------------------GAME-------------------------------------------\t\r\n\r\n    //mainGame = this;\r\n\r\n\r\n"]}